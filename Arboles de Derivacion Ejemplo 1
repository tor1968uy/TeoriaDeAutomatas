##### **Ejemplo 1: Generación de una palabra con una gramática**

**Descripción del problema:**

Queremos simular en Python cómo se generan palabras a partir de una gramática, explorando todas las posibles derivaciones y encontrando la correcta.

**Objetivo:**
- Implementar una derivación paso a paso de una palabra usando una gramática.
- Asegurar que todas las reglas de producción se apliquen correctamente.

**Gramática dada**
- $G = (\{S, A\}, \{a, b\}, S, \{S \to aA, A \to b\})$
- Construir la derivación para la palabra "$ab$".

**Entradas:**
1. Un símbolo inicial $S$.
2. Reglas de producción de la gramática.
3. Palabra objetivo.

**Salidas:**
1. Secuencia de pasos que muestran la derivación.

**Ejemplo de salida esperada:**

```yaml
Paso 1: S  
Paso 2: aA  
Paso 3: ab  
```
"""

from collections import deque

def derivacion(simbolo_inicial, reglas, palabra_objetivo):
    # Fila para explorar todas las posibilidades
    fila = deque([(simbolo_inicial, [simbolo_inicial])])

    while fila:
        actual, pasos = fila.popleft()  # Tomamos el primer elemento de la fila

        # Si hemos alcanzado la palabra objetivo, retornamos los pasos
        if actual == palabra_objetivo:
            return pasos

        for i, simbolo in enumerate(actual):
            if simbolo in reglas:  # Si encontramos un no terminal, aplicamos sus reglas de producción
                for produccion in reglas[simbolo]:
                    nueva_cadena = actual[:i] + produccion + actual[i+1:]  # Sustituimos el símbolo

                    # Garantizamos que la nueva cadena no supere la longitud de la palabra esperada
                    if len(nueva_cadena) <= len(palabra_objetivo):
                        fila.append((nueva_cadena, pasos + [nueva_cadena]))  # Añadimos a la fila para continuar la exploración

    print("No se puede derivar la palabra objetivo con la gramática dada.")
    return []

# Definición de la gramática
gramatica = {
    "S": ["aA"],  # S → aA
    "A": ["b"]    # A → b
}

# Generando la derivación para "ab"
derivacion_resultado = derivacion("S", gramatica, "ab")

# Mostrando los pasos de la derivación
if derivacion_resultado:
    for i, paso in enumerate(derivacion_resultado):
        print(f"Paso {i+1}: {paso}")
